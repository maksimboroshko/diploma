package pages;

import com.codeborne.selenide.Condition;
import com.codeborne.selenide.Selenide;
import com.codeborne.selenide.SelenideElement;

import java.time.Duration;
import java.util.stream.Collectors;

import static com.codeborne.selenide.Condition.empty;
import static com.codeborne.selenide.Condition.visible;

import static com.codeborne.selenide.Selenide.*;
import static org.assertj.core.api.Assertions.assertThat;

public class MainPage {

    // –õ–æ–∫–∞—Ç–æ—Ä—ã
    private static final SelenideElement bannerBlock = $(".top-banner-module-content-Q1f85");
    private static final SelenideElement bannerText = bannerBlock.$("span");
    private static final SelenideElement moreDetailsLink = bannerBlock.$("a[data-marker='title']");
    private static final SelenideElement inputField = $("[data-marker='search-form/suggest/input']");
    private static final SelenideElement searchButton = $("[data-marker='search-form/submit-button']");
    private static final SelenideElement pageTitleText = $(".page-title-text-CBgaH.page-title-inline-LU8GK");
    private static final SelenideElement pageTitleCount = $(".page-title-count-yKVwK");
    private static final SelenideElement cookieBanner = $("[class*='styles-module-root-_yNxQ'][role='status']");


    // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    public MainPage openPage() {
        open("/");
        return this;
    }

    public void checkBannerTextCookies() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–π —Ç–µ–∫—Å—Ç
        SelenideElement bannerText = $x("//div[contains(@class, 'styles-module-root-_yNxQ')]//span[contains(text(), '–ü–æ–ª—å–∑—É—è—Å—å —Å–∞–π—Ç–æ–º, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ')]");

        // –û–∂–∏–¥–∞–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –±—É–¥–µ—Ç –≤–∏–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        bannerText.shouldBe(Condition.visible);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –±–∞–Ω–Ω–µ—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—É—é —Å—Ç—Ä–æ–∫—É
        String actualText = bannerText.getText().trim();
        String expectedText = "–ü–æ–ª—å–∑—É—è—Å—å —Å–∞–π—Ç–æ–º, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø–æ–ª–∏—Ç–∏–∫—É –∫—É–∫–∏. –¢–∞–∫ –ê–≤–∏—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–¥–æ–±–Ω–µ–µ üç™";

        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ–∫—Å—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º
        assert actualText.equals(expectedText) : "–û–∂–∏–¥–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞–π–¥–µ–Ω: " + actualText;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª–∏—Ç–∏–∫—É –∫—É–∫–∏
        SelenideElement cookiePolicyLink = $x("//a[contains(@href, '/legal/rules/cookies')]");
        cookiePolicyLink.shouldHave(Condition.attribute("href", "/legal/rules/cookies"));
    }





    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
    public MainPage reloadAndEnterTextAndClick() {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        openPage();

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        Selenide.sleep(5000);
        Selenide.refresh();

        // –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –≤–≤–æ–¥–∏–º —Å–ª–æ–≤–æ "–º–∞—à–∏–Ω–∞"
        Selenide.sleep(5000);
        inputField.setValue("–º–∞—à–∏–Ω–∞");

        // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–π—Ç–∏"
        searchButton.click();

        return this;  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç MainPage, —á—Ç–æ–±—ã —Ü–µ–ø–æ—á–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∞—Å—å
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    public MainPage checkSearchResults() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—Ä–∞–∑—É "–û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É ¬´–º–∞—à–∏–Ω–∞¬ª"
        pageTitleText.shouldBe(Condition.visible)
                .shouldHave(Condition.exactText("–û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É ¬´–º–∞—à–∏–Ω–∞¬ª"));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –±–æ–ª—å—à–µ –Ω—É–ª—è
        pageTitleCount.shouldBe(Condition.visible);
        String resultCountText = pageTitleCount.getText().replaceAll("\\s+", "");
        int resultCount = Integer.parseInt(resultCountText);

        if (resultCount > 0) {
            System.out.println("–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: " + resultCount);
        } else {
            throw new AssertionError("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã.");
        }
        return this;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –±–∞–Ω–Ω–µ—Ä–µ
    public MainPage checkBannerText() {
        bannerText.shouldBe(Condition.visible)
                .shouldHave(Condition.exactText("–ê–≤–∏—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ GooglePlay. –ù–µ —É–¥–∞–ª—è–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."));
        return this;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
    public MainPage checkMoreDetailsLink() {
        moreDetailsLink.shouldBe(Condition.visible)
                .shouldHave(Condition.text("–ü–æ–¥—Ä–æ–±–Ω–µ–µ"))
                .shouldHave(Condition.attributeMatching("href",
                        "https://(www\\.)?avito.ru/apps\\?utm_source=avito_banner&utm_medium=referral&utm_campaign=avito_banner.*"));
        return this;
    }

    // –ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ
    public MainPage clickMoreDetailsLink() {
        moreDetailsLink.click();
        return this;
    }
}
